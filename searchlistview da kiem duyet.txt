package com.example.nguye.customlistviewvoisearch;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Filter;
import android.widget.Filterable;
import android.widget.ImageView;
import android.widget.TextView;

import java.util.ArrayList;

/**
 * Created by nguye on 12/21/2015.
 */
public class Adapter extends BaseAdapter implements Filterable {
    Context c;
    ArrayList<Player> players;
    CustomFilter filter;
    ArrayList<Player> filterList;


    public Adapter(Context ctx,ArrayList<Player> players){
        this.c=ctx;
        this.players=players;
        this.filterList=players;
    }
    @Override
    public int getCount() {
        return players.size();
    }

    @Override
    public Object getItem(int position) {
        return players.get(position);
    }

    @Override
    public long getItemId(int position) {
        return players.indexOf(getItem(position));
    }

    public ArrayList<Player> getPlayers(){
        return players;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        LayoutInflater inflater=(LayoutInflater)c.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        if (convertView==null){
            convertView=inflater.inflate(R.layout.model,null);
        }
        TextView nametxt=(TextView)convertView.findViewById(R.id.textview);
        ImageView img=(ImageView)convertView.findViewById(R.id.imageview);
        nametxt.setText(players.get(position).getName());
        img.setImageResource(players.get(position).getImg());
        return convertView;
    }

    @Override
    public Filter getFilter() {
        if (filter == null){
            filter=new CustomFilter();
        }
        return filter;
    }



    class CustomFilter extends Filter{

        @Override
        protected FilterResults performFiltering(CharSequence constraint) {
            FilterResults results=new FilterResults();
            if (constraint!=null && constraint.length()>0){
                constraint=constraint.toString().toUpperCase();
                ArrayList<Player> filters=new ArrayList<Player>();
                for (int i=0;i<filterList.size();i++){
                    if (filterList.get(i).getName().toUpperCase().contains(constraint)){//dong nay de tim kiem theo ten
                        Player p=new Player(filterList.get(i).getName(),filterList.get(i).getImg());
                        filters.add(p);

                    }
                }
                results.count=filters.size();
                results.values=filters;
            }
            else {
                results.count=filterList.size();
                results.values=filterList;
            }

            return results;
        }

        @Override
        protected void publishResults(CharSequence constraint, FilterResults results) {

            players=(ArrayList<Player>) results.values;
            notifyDataSetChanged();
        }
    }
}
o ben ham main actovity
  lv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {

                Intent i=new Intent(MainActivity.this,Main2Activity.class);
                i.putExtra("data",adapter.getPlayers().get(position).getName());//dong nay chuyen du lieu
                startActivity(i);

            }
        });
 sv.setOnQueryTextListener(new SearchView.OnQueryTextListener() {//cai nay chinh la ham lien ket search voi list view
            @Override
            public boolean onQueryTextSubmit(String query) {
                return false;
            }

            @Override
            public boolean onQueryTextChange(String newText) {
                adapter.getFilter().filter(newText);
                return false;
            }
        });
private ArrayList<Player> getPlayers(){ //cai nay dung de do? vao adapter
        players=new ArrayList<Player>();
        Player p;
        for (int i=0;i<names.length;i++){
            p=new Player(names[i],image[i]);
            players.add(p);
        }
        return players;
    }
  final Adapter adapter=new Adapter(MainActivity.this,getPlayers());